리스트 : list=[] 순서보장,중복허용, lst[idx],
 맨 끝에 숫자는 -1, 수정이 가능하다. 
 추가: append(),: 마지막에 집어넣기, 
 원하는곳에 집어넣기 insert(),extend(), 삭제 remove(), pop(), clear(),
튜플 t=()  순서보장,중복허용, 소괄호 사용, 수정안됨,삭제,추가 안됨--> 읽기 전용 
세트 s={} 중괄호 사용, 콤마로 값 부분, 순서,중복,수정 안됨 추기: add(), update(), 삭제: remove(), pop(),clear()
딕셔너리 d={keyall} 순서보장, 인덱스를 키값을 보장 중복 허용안함, 수정가능,추가삭제 가능


수행평가에 나오는거: 튜플=(값1,값2) 가로의 차이를 확인하라

my_tuple=("오예스",과자") 패킹 
언패킹

(one,two,*others)= numbers 리스트


딕셔너리: 재고정리, 키와 값을 쌍으로 지정 딕셔너리  객관식에 나옴


슬라이싱(일부분꺼내기)

print(a[1,4[) 4앞에 까지

값 추가하기 
a=[1,2,3]
a.append(4)   맨  끝에 추가하기
[1,2,3,4]

값 삽입하기 
a.insrt(1,100)
[1,100,2,3,4]

pop(마지막 값 꺼내고 삭제) 
x=a.pop()
printf9x) 

다양한 자료형을 담을 수있다. [123,'hello'] 도 가능


여러값들을 순서대로 관리: 리스트
값이 바뀔일이 없거나 바뀌면 안된다 튜플
값의 존재 여부가 중요하다, 중복은 안된다 세트
key를 통해 효츌적으로 데이터 관리  : 딕셔너리(수행평가)

중첩  if문제나옴

for x in range(10)
	print("팔벌려 뛰기해")

마지막 숫자 미만까지
range(sart,stop) start이상,stop 미만
range(start,stop,strp) start 이상 stop 미만 step 만큼 증가


recall=[
lower, upper 수행평가

함수
def show_price()

불러오지 않으면 아무것도 뜨지 않는다.


